#! /usr/bin/env bash
set -e

github_base=https://api.github.com
github_ini=$HOME/.github
github_key=$HOME/.ssh/github/id_rsa

set_ssh_key() {
  # sets ssh_key
  if [ ! -f $github_key ]; then
    # Generate if not there
    mkdir -p $(dirname $github_key)
    ssh-keygen -f $github_key -N "" -t rsa -C "generated by dotfiles-bootstrap"
  fi

  # Get public key
  ssh_key=$(ssh-keygen -y -f $github_key)
}

set_github_token() {
  # sets github_token and github_user variables
  if [ -f $github_ini ]; then
    github_token=$(sed -n 's/^ *token *= *//p' $github_ini)
    github_user=$(sed -n 's/^ *user *= *//p' $github_ini)
  fi

  if [ -z "$github_token" ]; then
    github_user=
    echo "Can't find OAuth token for github in $github_ini."
    echo "Please visit https://github.com/settings/tokens to get the token."
    echo "Access Token:"
    read github_token

    if [ -z "$github_token" ]; then
      exit 1
    fi
  fi
  if [ ! -f $github_ini ]; then
    github_user=$(
      curl -sf -H "Authorization: token ${github_token}" $github_base/user |\
        sed -n 's/^ *"login": "\([^"]*\)",/\1/p'
    )
    if [ -z "$github_user" ]; then
      echo "Can't authenticate using OAuth token provided"
      exit 1
    else
      echo "The token belongs to $github_user"
      echo "[OAuth]" > $github_ini
      echo "user=$github_user" >> $github_ini
      echo "token=$github_token" >> $github_ini
    fi
  fi
}

upload_key() {
  key_found=$(
    curl -sf -H "Authorization: token ${github_token}" $github_base/users/$github_user/keys |\
    grep -o "$ssh_key" || echo "")
  if [ -z "$key_found" ]; then
    curl -sf -H "Authorization: token ${github_token}" \
      -X POST \
      -d "{\"title\": \"$USER@$(hostname) GitHub key\", \"key\": \"$ssh_key\", \"read_only\": false}" \
      $github_base/user/keys
  else
    echo "The ssh key is already uploaded to github"
    #exit 0
  fi
}

add_ssh_config() {
  if [ ! -f "$HOME/.ssh/config" ]; then
    echo "Include config.d/*" > $HOME/.ssh/config
  fi
  local ssh_config=$HOME/.ssh/config.d/github
  local section_found=
  if [ -f "$ssh_config" ]; then
    section_found=$(
      grep -o "HostName.*github.com" $ssh_config || echo "")
  fi
  if [ -z "$section_found" ]; then
    mkdir -p $(dirname "$ssh_config")
    echo "Host github github.com" > $ssh_config
    echo "  HostName github.com" >> $ssh_config
    echo "  IdentityFile $github_key" >> $ssh_config
    echo "  ForwardX11 no" >> $ssh_config
  else
    echo "$ssh_config is already up-to-date"
  fi
}

set_github_token
set_ssh_key
upload_key
add_ssh_config
